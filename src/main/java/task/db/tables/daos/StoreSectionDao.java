/*
 * This file is generated by jOOQ.
*/
package task.db.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import task.db.tables.StoreSection;
import task.db.tables.records.StoreSectionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoreSectionDao extends DAOImpl<StoreSectionRecord, task.db.tables.pojos.StoreSection, Long> {

    /**
     * Create a new StoreSectionDao without any configuration
     */
    public StoreSectionDao() {
        super(StoreSection.STORE_SECTION, task.db.tables.pojos.StoreSection.class);
    }

    /**
     * Create a new StoreSectionDao with an attached configuration
     */
    public StoreSectionDao(Configuration configuration) {
        super(StoreSection.STORE_SECTION, task.db.tables.pojos.StoreSection.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(task.db.tables.pojos.StoreSection object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<task.db.tables.pojos.StoreSection> fetchById(Long... values) {
        return fetch(StoreSection.STORE_SECTION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public task.db.tables.pojos.StoreSection fetchOneById(Long value) {
        return fetchOne(StoreSection.STORE_SECTION.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<task.db.tables.pojos.StoreSection> fetchByName(String... values) {
        return fetch(StoreSection.STORE_SECTION.NAME, values);
    }
}
